{
  "compilerOptions": {
    "target": "es2017",
    "lib": [
      // Required for async iterators/generators:
      "esnext.asynciterable",
      // These are the defaults for "target": "es2017", but they have to be explicitly specified if we want to add anything to "lib":
      "es2017",
      "dom",
      "dom.iterable",
      "scripthost"
    ],
    "module": "commonjs",
    "stripInternal": true,
    "declaration": true,
    "strict": true, /* Enable all strict type-checking options. */
    "noImplicitAny": true, /* Raise error on expressions and declarations with an implied "any" type. */
    "strictNullChecks": true, /* Enable strict null checks. */
    "noImplicitThis": true, /* Raise error on "this" expressions with an implied "any" type. */
    "alwaysStrict": true, /* Parse in strict mode and emit "use strict" for each source file. */
    "noUnusedLocals": true, /* Report errors on unused locals. */
    "noUnusedParameters": true, /* Report errors on unused parameters. */
    "noImplicitReturns": true, /* Report error when not all code paths in function return a value. */
    "noFallthroughCasesInSwitch": false, /* DON'T Report errors for fallthrough cases in switch statement. It is possible to use this feature safely, and we have been doing that for years. */
    "experimentalDecorators": true,
    "sourceMap": true,
    "declarationMap": true,
    "jsx": "react",
    "preserveConstEnums": true, /* Do not erase const enum declarations (objects) in generated code. Enum values will still be replaced by literals, this just gives downstream consumers the option to parallelize transpilation and typechecking. */
    "forceConsistentCasingInFileNames": true
  }
}